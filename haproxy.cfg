global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /var/lib/haproxy/stats mode 660 group haproxy
    stats timeout 30s
    user haproxy
    group haproxy
    daemon
    stats socket /var/run/haproxy.sock mode 600 level admin

    # SSL ayarları 
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout client 10s
    timeout server 10s
    timeout connect 5s
    timeout http-request 5s
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 429 /etc/haproxy/errors/429.http  # Rate limiting ve bot engelleme için
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http


# Frontend: HTTPS ve HTTP
frontend https-in
    bind *:443 ssl crt-list /etc/haproxy/certs/cluster.crtlist alpn h2,http/1.1
    http-request redirect scheme https code 301 if !{ ssl_fc }
    timeout client-fin 5s
    bind *:80

    # Türkiye IP kısıtlaması
    acl is_turkey_ip src -f /etc/haproxy/tr-ip-list.map
    acl is_allowed_foreign src -f /etc/haproxy/allowed-foreign-ips.map
    http-request return status 403 content-type text/html file /etc/haproxy/errors/403-turkey-only.html if !is_turkey_ip !is_allowed_foreign

    # Geliştirilmiş Bot Algılama
    acl empty_referer hdr(Referer) -m len 0
    acl suspicious_path path_beg -i /wp-login /admin /login /xmlrpc
    acl bad_ua hdr_sub(User-Agent) -i sqlmap curl/7.0 wget python-requests libwww-perl bot spider crawler
    acl no_cookies hdr(Cookie) -m len 0
    acl rapid_requests sc_http_req_rate(0) gt 30
    stick-table type ip size 1m expire 10m store http_req_rate(10s),http_err_rate(10s)
    http-request track-sc0 src
    http-request deny deny_status 429 if empty_referer suspicious_path
    http-request deny deny_status 429 if bad_ua
    http-request deny deny_status 429 if no_cookies rapid_requests

    # Mevcut Rate Limiting
    http-request deny deny_status 429 if { sc_http_req_rate(0) gt 50 } || { sc_http_err_rate(0) gt 10 }

    # AbuseIPDB Blacklist
    acl is_blacklisted src -f /etc/haproxy/blacklist.txt
    http-request deny deny_status 403 content-type text/html file /etc/haproxy/errors/403-blacklist.html if is_blacklisted

    # Güvenlik Başlıkları
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-Frame-Options DENY
    http-response set-header Referrer-Policy strict-origin-when-cross-origin

    # İstemci Bilgisi Yönlendirme
    http-request set-header X-Forwarded-For %[src]
    http-request set-header X-Forwarded-Proto https
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]

    default_backend waf-backend

# Backend: WAF
backend waf-backend
    mode http
    timeout connect 5s
    timeout server 30s
    option http-keep-alive
    http-reuse safe
    server waf 192.168.1.2:80 check inter 2000 rise 2 fall 3

# Frontend: WAF Admin
frontend waf-admin
    bind *:7789 ssl crt-list /etc/haproxy/certs/cluster.crtlist alpn h2,http/1.1
    mode http
    acl allowed_admin_ips src -f /etc/haproxy/admin-ips.txt
    http-request deny deny_status 403 content-type text/html file /etc/haproxy/errors/403-admin-restricted.html if !allowed_admin_ips

    # İsteğe bağlı yönlendirme
    http-request redirect location /10f8c49e if { path / }

    default_backend waf-admin-backend

# Backend: WAF Admin
backend waf-admin-backend
    mode http
    server wafadmin 192.168.1.1:7789 ssl verify none
    


